name: travel_app
description: A new Flutter project.
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 2.0.1

environment:
  sdk: '>=3.4.0 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter
  # Image or Video
  flutter_easyloading: ^3.0.5
  cached_network_image: ^3.2.3
  chat_bubbles: any
  flick_video_player: ^0.5.0
  flutter_countdown_timer: ^4.1.0
  
  better_player: ^0.0.83
  
  
  path_provider: ^2.0.15
  image_picker: ^1.0.5
  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  # UI
  preload_page_view: ^0.2.0
  google_fonts: 4.0.4
  smooth_page_indicator: ^1.1.0
  auto_size_text: ^3.0.0
  bottom_sheet_scaffold: ^0.1.6
  flutter_sound: ^9.2.13
  file_picker:
  cupertino_icons: ^1.0.2
  flutter_screenutil: ^5.7.0
  animated_toggle_switch: ^0.6.2
  fluttertoast: ^8.2.4
  percent_indicator: ^4.2.3
  flutter_carousel_slider: ^1.1.0
  flutter_typeahead: ^4.3.8
  # Routing
  auto_route: 7.1.0
  bloc: ^8.1.1
  video_player: any
  chewie: ^1.5.0
  flutter_html: any
  expandable_page_view: ^1.0.17
 
  expandable: ^5.0.1
  dio: ^5.1.2
  dio_smart_retry: ^5.0.0
  pretty_dio_logger: ^1.3.1
  dartz: ^0.10.1
  
  flutter_bloc: ^8.1.3
  json_annotation: ^4.8.1
  flutter_animate: ^4.1.1+1
  intl: any
  flutter_widget_from_html: ^0.8.5
  http_parser: ^4.0.2
  hive: any
  hive_flutter: any
  flutter_timer_countdown: ^1.0.5
  flutter_widget_from_html_core: ^0.8.5+3
  flutter_tts: ^3.8.5
  
  mask_text_input_formatter: ^2.7.0
  shimmer_pro: ^0.0.6
  fade_shimmer: ^2.2.0
  dotted_line: ^3.2.2
  calendar_date_picker2: ^0.5.3
  webview_flutter: ^3.0.4
  camera: ^0.10.5+7
  image_gallery_saver: ^2.0.3
  firebase_core: ^2.24.2
  firebase_messaging: ^14.7.9
  flutter_local_notifications: ^16.3.0
  flutter_app_badger: ^1.5.0
  audioplayers: 6.0.0

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  hive_generator: any
  flutter_lints: ^2.0.1
  build_runner: ^2.3.3
  auto_route_generator: ^7.0.0
  flutter_pdfview: ^1.3.1
  json_serializable: ^6.6.2
  freezed: ^2.3.4
  
  permission_handler: ^10.2.0
  url_launcher: ^6.1.11

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - lib/assets/contents/
    - lib/assets/
    - lib/assets/icons/
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:


  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
include: package:flutter_lints/flutter.yaml

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    # avoid_print: false  # Uncomment to disable the `avoid_print` rule
    # prefer_single_quotes: true  # Uncomment to enable the `prefer_single_quotes` rule
